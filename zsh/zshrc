# zmodload zsh/zprof && zprof

DOTFILES_DIR="${HOME}/Repos/src/github.com/uetchy/dotfiles"
MOD_DIR="${DOTFILES_DIR}/zsh/mod"

# antibody
source <(antibody init)

# language
export LANG="en_US.UTF-8"
export LC_ALL=$LANG

# Homebrew
export PATH="/usr/local/sbin:$PATH"

# zsh
source $MOD_DIR/zsh.zsh .

# spaceship-prompt
source $MOD_DIR/spaceship.zsh .

# iTerm
source $MOD_DIR/iterm.zsh .

# POSIX commands
source $MOD_DIR/posix.zsh .

# vim
export EDITOR="vim"

# direnv
eval "$(direnv hook zsh)"
export DIRENV_LOG_FORMAT=""
alias dea="direnv allow"

# git
source $MOD_DIR/git.zsh .

# SSH
source $MOD_DIR/ssh.zsh .

# Node.js
source $MOD_DIR/nodejs.zsh .

# Python
source $MOD_DIR/python.zsh .

# Go
export GOPATH="$HOME/Repos"
export PATH=$PATH:$GOPATH/bin
export GO111MODULE=on

# Rust
[[ -d $HOME/.cargo ]] && export PATH="$HOME/.cargo/bin:$PATH"

# Ruby
source $MOD_DIR/ruby.zsh .

# readme
alias mkreadme="yo standard-readme"

# Google Translate
export JA_GTC_TARGET=ja
alias tr="translate"

# travis
[[ -f $HOME/.travis/travis.sh ]] && source $HOME/.travis/travis.sh

# license
# alias license="yo license --license MIT --name $(git config user.name) --email $(git config user.email) --website"
license() {
  local license_name=${@:-mit}
  local endpoint="https://raw.githubusercontent.com/licenses/license-templates/master/templates/${license_name}.txt"
  local year=$(date +%Y)
  local username=$(git config user.name)
  local email=$(git config user.email)
  local organization="${username} <${email}>"

  local license_body=$(curl -s ${endpoint})
  if [ $? != 0 ] || [ $license_body = "404: Not Found" ]; then
    echo "No such license: ${@}"
    return
  fi

  license_body=${license_body//"{{ year }}"/${year}}
  license_body=${license_body//"{{ organization }}"/${organization}}
  echo ${license_body} >/dev/stdout >LICENSE
}

# Visual Studio Code
vs() {
  if [ -z "$1" ]; then
    code .
  else
    if [[ "$1" == md:* ]]; then
      mdfind-dir "${1#md:}" | head -n1 | xargs code
    elif [[ "$1" == ghq:* ]]; then
      ghq list -p | grep ${1#ghq:} | head -n1 | xargs code
    else
      code $1
    fi
  fi
}

# Docker
source $MOD_DIR/docker.zsh .

# Google
alias g="googler"
alias goto="googler -j"

glance() {
  googler -C --np --json $@ | jq '.[0]'
}

# Google Cloud Platform
if [ -d /usr/local/Caskroom/google-cloud-sdk ]; then
  source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
  source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'
fi

gj() {
  gcloud "$@" --format json
}

# maintenance utils
source $MOD_DIR/maintenance.zsh .

# youtube-dl
ydl() {
  youtube-dl "$1" -f mp4 --add-metadata
}

ydla() {
  youtube-dl "$1" -x --audio-format=mp3 --embed-thumbnail --add-metadata
}

# waifu2x
waifu2x() {
  docker run --rm -it -v $(pwd):/srv/waifu2x nothink/waifu2x -q -m noise_scale --noise_level 2 --scale_ratio "2.0" -i "/srv/waifu2x/$1" -o "/srv/waifu2x/${1%.*}-waifu2x.png"
}

# iBooks
export Books="$HOME/Library/Mobile Documents/iCloud~com~apple~iBooks/Documents"

# Darwin
source $MOD_DIR/darwin.zsh .

# zprof
