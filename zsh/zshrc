# zmodload zsh/zprof && zprof

DOTFILES_DIR="${HOME}/Repos/src/github.com/uetchy/dotfiles"
MOD_DIR="${DOTFILES_DIR}/zsh/mod"

## OS specific
osArch="$(uname -s)"
case "${osArch}" in
  Linux*)
    source $MOD_DIR/linux.zsh .
    ;;
  Darwin*)
    source $MOD_DIR/macos.zsh .
    ;;
esac

# antibody
source <(antibody init)

# language
export LANG="en_US.UTF-8"
export LC_ALL=$LANG

# zsh
source $MOD_DIR/zsh.zsh .

## ls
alias f="open ."
alias ls="exa --time-style iso"
alias la="ls -laag --git"
alias lt="la -ltchanged"
alias tree="exa -T -I node_modules"

## cut
sel() {
  cut -d"${2:-' '}" -f"${1:-1}"
}

## du
alias volumestat="du -m -x -d 3 $HOME/Repos/src | awk '\$1 >= 500{print}'"

# spaceship-prompt
source $MOD_DIR/spaceship.zsh .

# vim
export EDITOR="vim"

# direnv
eval "$(direnv hook zsh)"
#export DIRENV_LOG_FORMAT=""
alias dea="direnv allow"

# git
source $MOD_DIR/git.zsh .

# SSH
source $MOD_DIR/ssh.zsh .

# Node.js
source $MOD_DIR/nodejs.zsh .

# Python
source $MOD_DIR/python.zsh .

# Go
export GOPATH="$HOME/Repos"
export PATH=$PATH:$GOPATH/bin
export GO111MODULE=on

# Rust
[[ -d $HOME/.cargo ]] && export PATH="$HOME/.cargo/bin:$PATH"

# Ruby
source $MOD_DIR/ruby.zsh .

# OCaml
[[ -f $HOME/.opam/opam-init/init.zsh ]] && . $HOME/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# Google Cloud Platform
if [ -d /usr/local/Caskroom/google-cloud-sdk ]; then
  source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
  source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'
fi

alias gc="gcloud"

gj() {
  gcloud "$@" --format json
}

cloud-status() {
  gcloud info
  cat ~/.aws/credentials
  cat ~/.aws/config
}

# travis
[[ -f $HOME/.travis/travis.sh ]] && source $HOME/.travis/travis.sh

# howdoi
alias so="howdoi -c -a"

# license
license() {
  local license_name=${@:-apache}
  local endpoint="https://raw.githubusercontent.com/licenses/license-templates/master/templates/${license_name}.txt"
  local year=$(date +%Y)
  local username=$(git config user.name)
  local email=$(git config user.email)
  local organization="${username} <${email}>"

  local license_body=$(curl -s ${endpoint})
  if [ $? != 0 ] || [ $license_body = "404: Not Found" ]; then
    echo "No such license: ${@}"
    return
  fi

  license_body=${license_body//"{{ year }}"/${year}}
  license_body=${license_body//"{{ organization }}"/${organization}}
  echo ${license_body} > LICENSE
}


# gst
function new() {
  cd $(gst new $1) && clear
}

# Docker
source $MOD_DIR/docker.zsh .

# GPG
alias gpg-list="gpg --list-secret-keys --keyid-format LONG"

# media
source $MOD_DIR/media.zsh .

# pkill
alias killer="ps | tail -n+2 | fzy | awk '{ print \$1 }' | xargs kill -9"

# Google
alias google="googler -n 3"
alias j="googler -j"
alias goto="j"

whatis() {
  googler --json "what is ${@}" | jq '.[0] | .abstract, .url' -r
}

# weather
alias weather="curl https://wttr.in?format=\"%l:+%c+%t+%p+%o\""

# tabtab source for packages
[[ -f ~/.config/tabtab/__tabtab.zsh ]] && . ~/.config/tabtab/__tabtab.zsh || true

# zprof
